<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/mvc
       https://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd">
    <mvc:annotation-driven/> <!--mvc 패턴을 쓰고 싶으면 꼭 줘야 한다.-->
    <context:annotation-config/> <!--어노테이션 활성화 멤버필드, 메소드-->

    <!-- 클래스 어노테이션 허용, 시작패키지 설정-->
    <context:component-scan base-package="com.koreait.first" />

    <!--
    **는 몇 차 주소가 있던 상관없다는 뜻
    web.xml <servlet-mapping>이 /로 시작하는 모든 요청을 <servlet>의 dispatcher가 다 받아서 handlermapping이 그 요청을 받아주는 controller가 있는지 물어보고 매핑시킨다.
    그런데 css나 js나 img는 controller필요없다
    /res/로 시작하는 요청이 들어오면 dispatcher가 관여하지 않고 얘가 담당해서 "webapp"에 /res/폴더 로 연결시키겠다
    -->
    <mvc:resources mapping="/res/**" location="/res/" />

    <!-- 사용할 파일명을 완성해주는 객체 -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/" />
        <property name="suffix" value=".jsp" />
    </bean>





</beans>